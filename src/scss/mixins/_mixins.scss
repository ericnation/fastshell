
// Browser Prefix Mixin
@mixin prefix($prop, $value, $prefixes...) {
  @each $prefix in $prefixes {
    @if($prefix != spec) {
      -#{$prefix}-#{$prop}: $value;
    }
    @if($prefix == spec) {
      #{$prop}: $value;
    }
  }
}

// Arrow Down
@mixin arrow-down($color, $size) {
  border-left: $size solid transparent;
  border-right: $size solid transparent;
  border-top: $size solid $color;
  height: 0; 
  width: 0; 
}

// Arrow Up
@mixin arrow-up($color, $size) {
  border-left: $size solid transparent;
  border-right: $size solid transparent;
  border-bottom: $size solid $color;
  height: 0; 
  width: 0; 
}

// Arrow Right
@mixin arrow-right($color, $size) {
  border-top: $size solid transparent;
  border-bottom: $size solid transparent;
  border-left: $size solid $color;
  height: 0; 
  width: 0; 
}

// Arrow Left
@mixin arrow-left($color, $size) {
  border-top: $size solid transparent;
  border-bottom: $size solid transparent; 
  border-right: $size solid $color;
  height: 0; 
  width: 0; 
}

// Opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// Vertically Align
@mixin vertical-align {
  @include prefix(transform, (-50%), webkit, moz, ms, spec);
  position: relative;
  top: 50%;
}

// Border Radius
@mixin border-radius ($values) {
  @include prefix(border-radius, ($values), webkit, moz, ms, spec);
  @include prefix(background-clip, padding-box, webkit, moz, ms, spec);
}

// Transition
@mixin transition ($value) {
  @include prefix(transition, ($value), webkit, moz, ms, spec);
}

// Transform
@mixin transform ($value) {
  @include prefix(transform, ($value), webkit, moz, ms, spec);
}

// Box Shadow
@mixin box-shadow($shadow1, $shadow2:false, $shadow3:false, $shadow4:false, $shadow5:false) {
 $params: $shadow1;
  @if $shadow2 
    { $params: $shadow1, $shadow2; }
    @if $shadow3 != false
      { $params: $shadow1, $shadow2, $shadow3; }
      @if $shadow4 != false
        { $params: $shadow1, $shadow2, $shadow3, $shadow4; }
        @if $shadow5 != false
          { $params: $shadow1, $shadow2, $shadow3, $shadow4, $shadow5; }

  @include prefix(box-shadow, $params, webkit, moz, ms, spec);
}

// Drop Shadow
@mixin drop-shadow($color:rgba(0,0,0,0.2), $blur:0, $x:0, $y:0) { // color, blur, x, y
  @include prefix(box-shadow, ($x $y $blur $color), webkit, moz, ms, spec);
}

// Media Query
@mixin apply-to($ltgt, $width){
  @media only screen and (#{$ltgt}: $width){
    @content;
  }
}
